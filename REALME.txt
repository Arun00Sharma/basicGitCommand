git init -> powers your folder to be managed by git ,
and initialization a new empty repository . it also 
create a .git folder that has all the relevant logic 
to manage versions of your project.

working Area: there can be bunch of file 
that not handle by git , file which is in working 
area is consider to be not stging area 
when we do git status , we can see bunch of untrack file 
then these are actually call working area.

staged Area : what all the files going to be part of next 
version . staging area is place , git know what change will done

repository area : this area actually contains the details
of all you previous registered version, and the 
files in this area ,git already manages them and know their 
version history

git add <file> ->movers from working area to staging area .

git rm --cached <files> -> moves file back 
 from staging area to working area .

 git commit : commmit is  a particular version of the project,it 
 capture is a commit

 git log-> list down all the commit of the repository . if you want to exit
 out of git log prompt press q.

 git restore REALME.txt -> it removes all file changes from the staging area to be 
 commited . this can be useful . if we did  some dirty peace of code not more wanted 
 instead of deleting every change line by line . we can 
 restore it or you can say restore last  clean version of the file .

 git restore --stage <files> -> it remove file from chenges to staging area to  working 
 area . this only works changes in the staging  

 git status : 

 difference between git rm and git restore :
 Ans: if you  want to move the whole file back to  the untracked state , then we 
 do git rm , otherwise if we just want to changes to be moved in working area or staging area  then 
 we git restored

 note : let take a example you commited two , every commited have ref.number ,now you want to 
 know what difference between these commit , use  git command :
  
  git diff  <refno.of firstcommit> <give ref no. of second commit>

  -------------------------------
  open your git bash
Step 1 : you can check the version of git which you are using :
   git --version

Step 2 : you can check configure your git , you can check email, or username 
you need configuation is important , check the configure :
 
       git config --list 
note : git is nothing but bunch of commmand .
--------------

cd developer 
------------
make a new folder 
 mkdir Git_demo_App_Mar

Ques : how to remove git folder after initializing 
 Ans :  rm -rf .git 

Ques: how to configure your git account details globally 
ANs : git config --global user.email "princevarun1989@gmail.com"

Ques: how to push your file ?
Ans : git push <remote-name> <branch-name>
note: when you initialize the git repository , after that you do add the 
central reposiory 
  git remote add <remotename> remote <remote url>

https://github.com/Arun00Sharma/basicGitCommand
